@page "/Login"
@using HttpClients.ClientInterfaces
@using Domain.Models
@inject IUserService UserService
@inject NavigationManager NavMgr

<AuthorizeView>
    <NotAuthorized>
        <div class="card">
            <h3>Please login</h3>
            <div class="field">
                <label>Username:</label>
                <input type="text" @bind="userName"/>
            </div>
            <div class="field">
                <label>Password:</label>
                <input type="password" @bind="password"/>
            </div>
        
            <div class="field">
                <button @onclick="LoginAsync">Log in</button>
            </div>
            <div class="field">
                <button @onclick="RegisterAsync">Register</button>
            </div>
            
             @if (!string.IsNullOrEmpty(errorLabel))
             {
                 <div class="field">
                     <label style="color: red">
                         @errorLabel
                     </label>
                 </div>
             }
             @if (!string.IsNullOrEmpty(msgLabel))
             {
                 <div class="field">
                     <label style="color: green">
                         @msgLabel
                     </label>
                 </div>
             }               
            
            
        </div>
    </NotAuthorized>
    <Authorized>
        <div class="card">
            <h3>Hello, @context.User.Identity.Name</h3>
        </div>
    </Authorized>
</AuthorizeView>

@code {
    private string userName;
    private string password;
    private string errorLabel;
    private string msgLabel;

    private async Task LoginAsync()
    {
        errorLabel = "";
        msgLabel = "";
        try
        {
            await UserService.LoginAsync(userName, password);
            NavMgr.NavigateTo("/");
        }
        catch (Exception e)
        {
            Console.WriteLine(e);
            errorLabel = $"Error: {e.Message}";
        }
    }

    private async Task RegisterAsync()
    {
        errorLabel = "";
        msgLabel = "";
        try
        {
            await UserService.RegisterAsync(userName, password);
            msgLabel = "Your account has been successfully created!";
        }
        catch (Exception e)
        {
            Console.WriteLine(e);
            errorLabel = $"Error: {e.Message}";
        }
    }
}